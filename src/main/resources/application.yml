server:
  port: 8083
spring:
  datasource:
#    url: jdbc:postgresql://localhost:5433/postgres
    url: jdbc:h2:mem:mydb
    username: sa
    password: password
    driverClassName: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQLDialect
        format-sql: true
    database-platform: org.hibernate.dialect.H2Dialect
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      max-poll-records: 5
      auto-offset-reset: earliest
      group-id: bealdung
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
test:
  topic: embedded-test-topic


example:
  value:
    annotation: exampleValueAnnotation
    list: one,two,three

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: health,info,prometheus

filter:
  name: ${SUBSCRIBTION_SITES_0_NAME:static, dupa}